package module.dashBoard.domain; 

valueType module.dashBoard.widgets.WidgetController as WidgetController {
    externalizeWith {
        Class getClass();
    }
    internalizeWith internalize();
}

public class DashBoardPanel {
}

public class DashBoardColumn {
	int columnOrder;
}

public class DashBoardWidget {
	String stateObjectId;
	int orderInColumn;
	protected WidgetController widgetController;
}

class WidgetOptions {
}

class Note {
	String text;
}

class DashBoardController {
	
}

relation DashBoardPanelDashBoardColumn {
	DashBoardPanel playsRole dashBoardPanel;
	DashBoardColumn playsRole dashBoardColumns {
		multiplicity *;
	}
}

relation DashBoardColumnDashBoardWidget {
	DashBoardColumn playsRole dashBoardColumn;
	DashBoardWidget playsRole widgets {
		multiplicity *;
	}
}

relation DashBoardWidgetWidgetOptions {
	DashBoardWidget playsRole widget;
	WidgetOptions playsRole options;
}

relation DashBoardPanelDashBoardController {
	DashBoardController playsRole dashBoardController;
	DashBoardPanel playsRole panels {
		multiplicity *;
	}
}

relation DashBoardColumnDashBoardController {
	DashBoardController playsRole dashBoardController;
	DashBoardColumn playsRole dashBoardColumns {
		multiplicity *;
	}
}

relation DashBoardWidgetDashBoardController {
	DashBoardController playsRole dashBoardController;
	DashBoardWidget playsRole availableWidgets {
		multiplicity *;
	}
}

relation WidgetOptionsDashBoardController {
	DashBoardController playsRole dashBoardController;
	WidgetOptions playsRole widgetsOptions {
		multiplicity *;
	}
}

relation NoteDashBoardController {
	DashBoardController playsRole dashBoardController;
	Note playsRole notes {
		multiplicity *;
	}
}

relation DashBoardControllerMyOrg {
	DashBoardController playsRole dashBoardController;
	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu;
}

relation DashBoardPanelUser {
	DashBoardPanel playsRole userDashBoard;
	.org.fenixedu.bennu.core.domain.User playsRole user;
}
